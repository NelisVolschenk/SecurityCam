version: '3'

services:

  # MQTT container
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:${MQTT_VERSION}
    restart: unless-stopped
    ports:
      - 1883:1883
    volumes:
      - ./volumes/mqtt/config:/mosquitto/config
      - ./volumes/mqtt/data:/mosquitto/data
      - ./volumes/mqtt/log:/mosquitto/log


  # Homeassistant container
  homeassistant:
    container_name: home-assistant
    image: homeassistant/raspberrypi3-homeassistant:${HOMEASSISTANT_VERSION}
    volumes:
      - ./volumes/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      #- /dev/serial/by-id/:/dev/serial/by-id/
    environment:
      - TZ=Africa/Johannesburg
      - PUID=${PUID}
      - PGID=${PGID}
    restart: unless-stopped
    network_mode: host
    depends_on:
      mqtt:
        condition: service_started

#  # The frigate container
#  frigate:
#    container_name: frigate
#    privileged: true # this may not be necessary for all setups
#    restart: unless-stopped
#    image: blakeblackshear/frigate:${FRIGATE_VERSION}
#    shm_size: "64mb" # update for your cameras based on calculation above
##    devices:
##      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
##      - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
##      - /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - ./volumes/frigate/config/config.yml:/config/config.yml:ro
#      - ./volumes/frigate/storage:/media/frigate
##      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
##        target: /tmp/cache
##        tmpfs:
##          size: 1000000000
#    ports:
#      - "5000:5000"
#      - "1935:1935" # RTMP feeds
#    environment:
#      - FRIGATE_RTSP_PASSWORD:${FRIGATE_PASSWORD}
#    depends_on:
#      mqtt:
#        condition: service_started
#
#  # Node-RED
#  nodered:
#    container_name: nodered
#    image: nodered/node-red:${NODERED_VERSION}
#    ports:
#      - "1880:1880"
#    volumes:
#      # Local path where all Node-RED config will be stored.
#      - ./volumes/nodered:/data
#    depends_on:
#      - homeassistant
#    environment:
#      - TZ=Africa/Johannesburg
#    user: "${PUID}:${PGID}"
#    restart: unless-stopped
#
#  # AppDaemon
#  appdaemon:
#    container_name: appdaemon
#    restart: unless-stopped
#    image: acockburn/appdaemon:${APPDAEMON_VERSION}
#    environment:
#      HA_URL: "http://${SERVER_IP}:8123"
#      TOKEN: "${HA_APPDAEMON_KEY}"
#      DASH_URL: "http://${SERVER_IP}:5050"
#    ports:
#      - "5050:5050"
#    volumes:
#      # Set which local directory will contain all your app daemon configuration
#      - ./volumes/appdaemon:/conf
#    depends_on:
#      - homeassistant
#    user: "${PUID}:${PGID}"